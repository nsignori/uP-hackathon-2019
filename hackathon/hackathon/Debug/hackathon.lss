
hackathon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000730  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000284  00802000  00000730  000007c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00802284  00802284  00000a48  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000ab8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007046  00000000  00000000  00000bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000041a1  00000000  00000000  00007c3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e18  00000000  00000000  0000bddf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000224  00000000  00000000  0000cbf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004de3  00000000  00000000  0000ce1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000033d  00000000  00000000  00011bff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00011f3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3f 01 	jmp	0x27e	; 0x27e <__ctors_end>
   4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
   8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
   c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  10:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  14:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  18:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  1c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  20:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  24:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  28:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  2c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  30:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  34:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  38:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  3c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  40:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  44:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  48:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  4c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  50:	0c 94 bc 01 	jmp	0x378	; 0x378 <__vector_20>
  54:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  58:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  5c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  60:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  64:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  68:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  6c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  70:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  74:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  78:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  7c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  80:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  84:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  88:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  8c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  90:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  94:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  98:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  9c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  a0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  a4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  a8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  ac:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  b0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  b4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  b8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  bc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  c0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  c4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  c8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  cc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  d0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  d4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  d8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  dc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  e0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  e4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  e8:	0c 94 d8 02 	jmp	0x5b0	; 0x5b0 <__vector_58>
  ec:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  f0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  f4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  f8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
  fc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 100:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 104:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 108:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 10c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 110:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 114:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 118:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 11c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 120:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 124:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 128:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 12c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 130:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 134:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 138:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 13c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 140:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 144:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 148:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 14c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 150:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 154:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 158:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 15c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 160:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 164:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 168:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 16c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 170:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 174:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 178:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 17c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 180:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 184:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 188:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 18c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 190:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 194:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 198:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 19c:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1a0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1a4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1a8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1ac:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1b0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1b4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1b8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1bc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1c0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1c4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1c8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1cc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1d0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1d4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1d8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1dc:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1e0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1e4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1e8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1ec:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1f0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1f4:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1f8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__bad_interrupt>
 1fc:	ff 01       	movw	r30, r30
 1fe:	0d 02       	muls	r16, r29
 200:	4f 02       	muls	r20, r31
 202:	4f 02       	muls	r20, r31
 204:	34 02       	muls	r19, r20
 206:	42 02       	muls	r20, r18
 208:	4f 02       	muls	r20, r31
 20a:	4f 02       	muls	r20, r31
 20c:	4f 02       	muls	r20, r31
 20e:	4f 02       	muls	r20, r31
 210:	4f 02       	muls	r20, r31
 212:	4f 02       	muls	r20, r31
 214:	4f 02       	muls	r20, r31
 216:	4f 02       	muls	r20, r31
 218:	4f 02       	muls	r20, r31
 21a:	4f 02       	muls	r20, r31
 21c:	f8 01       	movw	r30, r16
 21e:	06 02       	muls	r16, r22
 220:	14 02       	muls	r17, r20
 222:	1b 02       	muls	r17, r27
 224:	22 02       	muls	r18, r18
 226:	4f 02       	muls	r20, r31
 228:	49 02       	muls	r20, r25
 22a:	4f 02       	muls	r20, r31
 22c:	4f 02       	muls	r20, r31
 22e:	4f 02       	muls	r20, r31
 230:	4f 02       	muls	r20, r31
 232:	4f 02       	muls	r20, r31
 234:	4f 02       	muls	r20, r31
 236:	4f 02       	muls	r20, r31
 238:	4f 02       	muls	r20, r31
 23a:	4f 02       	muls	r20, r31
 23c:	4f 02       	muls	r20, r31
 23e:	4f 02       	muls	r20, r31
 240:	3b 02       	muls	r19, r27
 242:	4f 02       	muls	r20, r31
 244:	4f 02       	muls	r20, r31
 246:	4f 02       	muls	r20, r31
 248:	29 02       	muls	r18, r25

0000024a <__trampolines_start>:
 24a:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 24e:	0c 94 22 02 	jmp	0x444	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 252:	0c 94 14 02 	jmp	0x428	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 256:	0c 94 3b 02 	jmp	0x476	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 25a:	0c 94 1b 02 	jmp	0x436	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 25e:	0c 94 29 02 	jmp	0x452	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 262:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <set_note+0x3a>
 266:	0c 94 49 02 	jmp	0x492	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 26a:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 26e:	0c 94 34 02 	jmp	0x468	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 272:	0c 94 06 02 	jmp	0x40c	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 276:	0c 94 42 02 	jmp	0x484	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 27a:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <set_note+0x48>

0000027e <__ctors_end>:
 27e:	11 24       	eor	r1, r1
 280:	1f be       	out	0x3f, r1	; 63
 282:	cf ef       	ldi	r28, 0xFF	; 255
 284:	cd bf       	out	0x3d, r28	; 61
 286:	df e3       	ldi	r29, 0x3F	; 63
 288:	de bf       	out	0x3e, r29	; 62
 28a:	00 e0       	ldi	r16, 0x00	; 0
 28c:	0c bf       	out	0x3c, r16	; 60
 28e:	18 be       	out	0x38, r1	; 56
 290:	19 be       	out	0x39, r1	; 57
 292:	1a be       	out	0x3a, r1	; 58
 294:	1b be       	out	0x3b, r1	; 59

00000296 <__do_copy_data>:
 296:	12 e2       	ldi	r17, 0x22	; 34
 298:	a0 e0       	ldi	r26, 0x00	; 0
 29a:	b0 e2       	ldi	r27, 0x20	; 32
 29c:	e0 e3       	ldi	r30, 0x30	; 48
 29e:	f7 e0       	ldi	r31, 0x07	; 7
 2a0:	00 e0       	ldi	r16, 0x00	; 0
 2a2:	0b bf       	out	0x3b, r16	; 59
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <__do_copy_data+0x14>
 2a6:	07 90       	elpm	r0, Z+
 2a8:	0d 92       	st	X+, r0
 2aa:	a4 38       	cpi	r26, 0x84	; 132
 2ac:	b1 07       	cpc	r27, r17
 2ae:	d9 f7       	brne	.-10     	; 0x2a6 <__do_copy_data+0x10>
 2b0:	1b be       	out	0x3b, r1	; 59

000002b2 <__do_clear_bss>:
 2b2:	22 e2       	ldi	r18, 0x22	; 34
 2b4:	a4 e8       	ldi	r26, 0x84	; 132
 2b6:	b2 e2       	ldi	r27, 0x22	; 34
 2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
 2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
 2bc:	ab 38       	cpi	r26, 0x8B	; 139
 2be:	b2 07       	cpc	r27, r18
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
 2c2:	0e 94 50 02 	call	0x4a0	; 0x4a0 <main>
 2c6:	0c 94 96 03 	jmp	0x72c	; 0x72c <_exit>

000002ca <__bad_interrupt>:
 2ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002ce <clock_init>:
 2ce:	8f 93       	push	r24
 2d0:	82 e0       	ldi	r24, 0x02	; 2
 2d2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>

000002d6 <check32MHzStatus>:
 2d6:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 2da:	81 ff       	sbrs	r24, 1
 2dc:	fc cf       	rjmp	.-8      	; 0x2d6 <check32MHzStatus>
 2de:	88 ed       	ldi	r24, 0xD8	; 216
 2e0:	80 93 34 00 	sts	0x0034, r24	; 0x800034 <__TEXT_REGION_LENGTH__+0x700034>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>

000002ea <skip32MHZ_enable>:
 2ea:	88 ed       	ldi	r24, 0xD8	; 216
 2ec:	80 93 34 00 	sts	0x0034, r24	; 0x800034 <__TEXT_REGION_LENGTH__+0x700034>
 2f0:	80 e0       	ldi	r24, 0x00	; 0
 2f2:	80 93 41 00 	sts	0x0041, r24	; 0x800041 <__TEXT_REGION_LENGTH__+0x700041>
 2f6:	8f 91       	pop	r24
 2f8:	08 95       	ret

000002fa <dac_init>:
 2fa:	e0 e0       	ldi	r30, 0x00	; 0
 2fc:	f3 e0       	ldi	r31, 0x03	; 3
 2fe:	88 e0       	ldi	r24, 0x08	; 8
 300:	80 83       	st	Z, r24
 302:	82 e2       	ldi	r24, 0x22	; 34
 304:	81 83       	std	Z+1, r24	; 0x01
 306:	12 82       	std	Z+2, r1	; 0x02
 308:	80 81       	ld	r24, Z
 30a:	81 60       	ori	r24, 0x01	; 1
 30c:	80 83       	st	Z, r24
 30e:	08 95       	ret

00000310 <dma_init>:
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	e0 e0       	ldi	r30, 0x00	; 0
 316:	f1 e0       	ldi	r31, 0x01	; 1
 318:	20 81       	ld	r18, Z
 31a:	20 64       	ori	r18, 0x40	; 64
 31c:	20 83       	st	Z, r18
 31e:	25 e0       	ldi	r18, 0x05	; 5
 320:	20 8b       	std	Z+16, r18	; 0x10
 322:	21 e0       	ldi	r18, 0x01	; 1
 324:	23 8b       	std	Z+19, r18	; 0x13
 326:	20 e0       	ldi	r18, 0x00	; 0
 328:	32 e0       	ldi	r19, 0x02	; 2
 32a:	24 8b       	std	Z+20, r18	; 0x14
 32c:	35 8b       	std	Z+21, r19	; 0x15
 32e:	80 8f       	std	Z+24, r24	; 0x18
 330:	09 2e       	mov	r0, r25
 332:	00 0c       	add	r0, r0
 334:	aa 0b       	sbc	r26, r26
 336:	bb 0b       	sbc	r27, r27
 338:	09 2f       	mov	r16, r25
 33a:	1a 2f       	mov	r17, r26
 33c:	2b 2f       	mov	r18, r27
 33e:	33 27       	eor	r19, r19
 340:	01 8f       	std	Z+25, r16	; 0x19
 342:	cd 01       	movw	r24, r26
 344:	aa 27       	eor	r26, r26
 346:	bb 27       	eor	r27, r27
 348:	82 8f       	std	Z+26, r24	; 0x1a
 34a:	64 8f       	std	Z+28, r22	; 0x1c
 34c:	75 8f       	std	Z+29, r23	; 0x1d
 34e:	16 8e       	std	Z+30, r1	; 0x1e
 350:	81 89       	ldd	r24, Z+17	; 0x11
 352:	88 23       	and	r24, r24
 354:	ec f3       	brlt	.-6      	; 0x350 <dma_init+0x40>
 356:	e0 e0       	ldi	r30, 0x00	; 0
 358:	f1 e0       	ldi	r31, 0x01	; 1
 35a:	16 8a       	std	Z+22, r1	; 0x16
 35c:	89 e5       	ldi	r24, 0x59	; 89
 35e:	82 8b       	std	Z+18, r24	; 0x12
 360:	80 89       	ldd	r24, Z+16	; 0x10
 362:	80 62       	ori	r24, 0x20	; 32
 364:	80 8b       	std	Z+16, r24	; 0x10
 366:	80 89       	ldd	r24, Z+16	; 0x10
 368:	80 68       	ori	r24, 0x80	; 128
 36a:	80 8b       	std	Z+16, r24	; 0x10
 36c:	80 81       	ld	r24, Z
 36e:	80 68       	ori	r24, 0x80	; 128
 370:	80 83       	st	Z, r24
 372:	1f 91       	pop	r17
 374:	0f 91       	pop	r16
 376:	08 95       	ret

00000378 <__vector_20>:
	PORTC.DIRSET = PIN7_bm;
}

void init_gpio(void) {
	PORTD.OUTSET = PIN4_bm | PIN6_bm;
	PORTD.DIRSET = PIN4_bm | PIN6_bm;
 378:	1f 92       	push	r1
 37a:	0f 92       	push	r0
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	0f 92       	push	r0
 380:	11 24       	eor	r1, r1
 382:	08 b6       	in	r0, 0x38	; 56
 384:	0f 92       	push	r0
 386:	18 be       	out	0x38, r1	; 56
 388:	8f 93       	push	r24
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	80 93 84 22 	sts	0x2284, r24	; 0x802284 <__data_end>
 390:	8f 91       	pop	r24
 392:	0f 90       	pop	r0
 394:	08 be       	out	0x38, r0	; 56
 396:	0f 90       	pop	r0
 398:	0f be       	out	0x3f, r0	; 63
 39a:	0f 90       	pop	r0
 39c:	1f 90       	pop	r1
 39e:	18 95       	reti

000003a0 <speaker_init>:
 3a0:	e0 e4       	ldi	r30, 0x40	; 64
 3a2:	f6 e0       	ldi	r31, 0x06	; 6
 3a4:	80 e8       	ldi	r24, 0x80	; 128
 3a6:	85 83       	std	Z+5, r24	; 0x05
 3a8:	81 83       	std	Z+1, r24	; 0x01
 3aa:	08 95       	ret

000003ac <sys_interr_init>:
}


void sys_interr_init(void) {
	PMIC.CTRL = PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_HILVLEN_bm;
 3ac:	87 e0       	ldi	r24, 0x07	; 7
 3ae:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
	sei();
 3b2:	78 94       	sei
 3b4:	08 95       	ret

000003b6 <set_note>:
}

void set_note(char note) {
 3b6:	e8 2f       	mov	r30, r24
	TCC0.CTRLA = TC_CLKSEL_OFF_gc;
 3b8:	10 92 00 08 	sts	0x0800, r1	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
	while (TCC1.CNT < 3000);
 3bc:	a0 e4       	ldi	r26, 0x40	; 64
 3be:	b8 e0       	ldi	r27, 0x08	; 8
 3c0:	90 96       	adiw	r26, 0x20	; 32
 3c2:	2d 91       	ld	r18, X+
 3c4:	3c 91       	ld	r19, X
 3c6:	91 97       	sbiw	r26, 0x21	; 33
 3c8:	28 3b       	cpi	r18, 0xB8	; 184
 3ca:	3b 40       	sbci	r19, 0x0B	; 11
 3cc:	c8 f3       	brcs	.-14     	; 0x3c0 <set_note+0xa>
	TCC0.CTRLA = TC_CLKSEL_DIV1_gc;
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	80 93 00 08 	sts	0x0800, r24	; 0x800800 <__TEXT_REGION_LENGTH__+0x700800>
	switch(note) {
 3d4:	8e 2f       	mov	r24, r30
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	fc 01       	movw	r30, r24
 3da:	f3 97       	sbiw	r30, 0x33	; 51
 3dc:	e7 32       	cpi	r30, 0x27	; 39
 3de:	f1 05       	cpc	r31, r1
 3e0:	08 f0       	brcs	.+2      	; 0x3e4 <set_note+0x2e>
 3e2:	5d c0       	rjmp	.+186    	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 3e4:	88 27       	eor	r24, r24
 3e6:	e2 50       	subi	r30, 0x02	; 2
 3e8:	ff 4f       	sbci	r31, 0xFF	; 255
 3ea:	8f 4f       	sbci	r24, 0xFF	; 255
 3ec:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__tablejump2__>
		case 'C': {
			TCC0.PER = (uint16_t) 119;
 3f0:	87 e7       	ldi	r24, 0x77	; 119
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 3f8:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 3fc:	08 95       	ret
		}
		case '3': {
			TCC0.PER = (uint16_t) 113;
 3fe:	81 e7       	ldi	r24, 0x71	; 113
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 406:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 40a:	08 95       	ret
		}
		case 'D': {
			TCC0.PER = (uint16_t) 106;
 40c:	8a e6       	ldi	r24, 0x6A	; 106
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 414:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 418:	08 95       	ret
		}
		case '4': {
			TCC0.PER = (uint16_t) 100;
 41a:	84 e6       	ldi	r24, 0x64	; 100
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 422:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 426:	08 95       	ret
		}
		case 'E': {
			TCC0.PER = (uint16_t) 95;
 428:	8f e5       	ldi	r24, 0x5F	; 95
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 430:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 434:	08 95       	ret
		}
		case 'F': {
			TCC0.PER = (uint16_t) 89;
 436:	89 e5       	ldi	r24, 0x59	; 89
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 43e:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 442:	08 95       	ret
		}
		case 'G': {
			TCC0.PER = (uint16_t) 84;
 444:	84 e5       	ldi	r24, 0x54	; 84
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 44c:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 450:	08 95       	ret
		}
		case 'Y': {
			TCC0.PER = (uint16_t) 79;
 452:	8f e4       	ldi	r24, 0x4F	; 79
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 45a:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			TCC1.CNT = 0;
 45e:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <__TEXT_REGION_LENGTH__+0x700860>
 462:	10 92 61 08 	sts	0x0861, r1	; 0x800861 <__TEXT_REGION_LENGTH__+0x700861>
			break;
 466:	08 95       	ret
		}
		case '7': {
			TCC0.PER = (uint16_t) 75;
 468:	8b e4       	ldi	r24, 0x4B	; 75
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 470:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 474:	08 95       	ret
		}
		case 'U': {
			TCC0.PER = (uint16_t) 71;
 476:	87 e4       	ldi	r24, 0x47	; 71
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 47e:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 482:	08 95       	ret
		}
		case '8': {
			TCC0.PER = (uint16_t) 67;
 484:	83 e4       	ldi	r24, 0x43	; 67
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 48c:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
			break;
 490:	08 95       	ret
		}
		case 'I': {
			TCC0.PER = (uint16_t) 63;
 492:	8f e3       	ldi	r24, 0x3F	; 63
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 49a:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
 49e:	08 95       	ret

000004a0 <main>:
// IR Flags
volatile uint8_t codes[2];
volatile uint8_t nextCode = 5; // Init to 5 so it doesn't trigger UART stuff

int main(void)
{
 4a0:	e4 e8       	ldi	r30, 0x84	; 132
 4a2:	f0 e2       	ldi	r31, 0x20	; 32
 4a4:	24 e8       	ldi	r18, 0x84	; 132
 4a6:	32 e2       	ldi	r19, 0x22	; 34
	for (int i = 0; i < 256; i++) {
		sin[i] = sin[i] << 2;
 4a8:	80 81       	ld	r24, Z
 4aa:	91 81       	ldd	r25, Z+1	; 0x01
 4ac:	88 0f       	add	r24, r24
 4ae:	99 1f       	adc	r25, r25
 4b0:	88 0f       	add	r24, r24
 4b2:	99 1f       	adc	r25, r25
 4b4:	81 93       	st	Z+, r24
 4b6:	91 93       	st	Z+, r25
volatile uint8_t codes[2];
volatile uint8_t nextCode = 5; // Init to 5 so it doesn't trigger UART stuff

int main(void)
{
	for (int i = 0; i < 256; i++) {
 4b8:	e2 17       	cp	r30, r18
 4ba:	f3 07       	cpc	r31, r19
 4bc:	a9 f7       	brne	.-22     	; 0x4a8 <main+0x8>
		sin[i] = sin[i] << 2;
	}
	clock_init();
 4be:	0e 94 67 01 	call	0x2ce	; 0x2ce <clock_init>
	speaker_init();
 4c2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <speaker_init>
	//bscale=0; bsel=1110 => baud = 2MHz
	USARTE0_init(1110, 0);
 4c6:	60 e0       	ldi	r22, 0x00	; 0
 4c8:	86 e5       	ldi	r24, 0x56	; 86
 4ca:	94 e0       	ldi	r25, 0x04	; 4
 4cc:	0e 94 3e 03 	call	0x67c	; 0x67c <USARTE0_init>
	dac_init();
 4d0:	0e 94 7d 01 	call	0x2fa	; 0x2fa <dac_init>
	dma_init(sin, &DACA_CH1DATA);
 4d4:	6a e1       	ldi	r22, 0x1A	; 26
 4d6:	73 e0       	ldi	r23, 0x03	; 3
 4d8:	84 e8       	ldi	r24, 0x84	; 132
 4da:	90 e2       	ldi	r25, 0x20	; 32
 4dc:	0e 94 88 01 	call	0x310	; 0x310 <dma_init>
	
	//enable usart for low-level receive interrupts
	USARTE0_enable_interrupts('R', 'L');
 4e0:	6c e4       	ldi	r22, 0x4C	; 76
 4e2:	82 e5       	ldi	r24, 0x52	; 82
 4e4:	0e 94 55 03 	call	0x6aa	; 0x6aa <USARTE0_enable_interrupts>
	
	//enable frequency timer (DMA)
	tcc0_init();
 4e8:	0e 94 1e 03 	call	0x63c	; 0x63c <tcc0_init>
	
	//enable note timer (0.25 s)
	tcc1_init();
 4ec:	0e 94 33 03 	call	0x666	; 0x666 <tcc1_init>
	tcc1_enable();
 4f0:	0e 94 2c 03 	call	0x658	; 0x658 <tcc1_enable>
	sys_interr_init();
 4f4:	0e 94 d6 01 	call	0x3ac	; 0x3ac <sys_interr_init>
	char* song = mary;
    while (1) 
    {
		if(nextCode == 2) {
			nextCode = 3;
			if(codes[0] == 0x55 && codes[1] == 0x77) { // Button 1 - 0x5577
 4f8:	c9 e8       	ldi	r28, 0x89	; 137
 4fa:	d2 e2       	ldi	r29, 0x22	; 34
	
	char* song = mary;
    while (1) 
    {
		if(nextCode == 2) {
			nextCode = 3;
 4fc:	13 e0       	ldi	r17, 0x03	; 3
	sys_interr_init();
	
	char* song = mary;
    while (1) 
    {
		if(nextCode == 2) {
 4fe:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <__data_start>
 502:	82 30       	cpi	r24, 0x02	; 2
 504:	f1 f4       	brne	.+60     	; 0x542 <main+0xa2>
			nextCode = 3;
 506:	10 93 00 20 	sts	0x2000, r17	; 0x802000 <__data_start>
			if(codes[0] == 0x55 && codes[1] == 0x77) { // Button 1 - 0x5577
 50a:	88 81       	ld	r24, Y
 50c:	85 35       	cpi	r24, 0x55	; 85
 50e:	19 f4       	brne	.+6      	; 0x516 <main+0x76>
 510:	89 81       	ldd	r24, Y+1	; 0x01
 512:	87 37       	cpi	r24, 0x77	; 119
 514:	b1 f0       	breq	.+44     	; 0x542 <main+0xa2>
				song = mary;
			} else if(codes[0] == 0x57 && codes[1] == 0x75) { // Button 2 - 0x5775
 516:	88 81       	ld	r24, Y
 518:	87 35       	cpi	r24, 0x57	; 87
 51a:	19 f4       	brne	.+6      	; 0x522 <main+0x82>
 51c:	89 81       	ldd	r24, Y+1	; 0x01
 51e:	85 37       	cpi	r24, 0x75	; 117
 520:	81 f0       	breq	.+32     	; 0x542 <main+0xa2>
				song = mary;
			} else if(codes[0] == 0xD7 && codes[1] == 0x57) { // Button 3 - 0xD757
 522:	88 81       	ld	r24, Y
 524:	87 3d       	cpi	r24, 0xD7	; 215
 526:	19 f4       	brne	.+6      	; 0x52e <main+0x8e>
 528:	89 81       	ldd	r24, Y+1	; 0x01
 52a:	87 35       	cpi	r24, 0x57	; 87
 52c:	51 f0       	breq	.+20     	; 0x542 <main+0xa2>
				song = mary;
			} else if(codes[0] == 0x57 && codes[1] == 0xD7) { // Button 4 - 0x57D7
 52e:	88 81       	ld	r24, Y
 530:	87 35       	cpi	r24, 0x57	; 87
 532:	19 f4       	brne	.+6      	; 0x53a <main+0x9a>
 534:	89 81       	ldd	r24, Y+1	; 0x01
 536:	87 3d       	cpi	r24, 0xD7	; 215
 538:	21 f0       	breq	.+8      	; 0x542 <main+0xa2>
				song = mary;
			} else if(codes[0] == 0xD7 && codes[1] == 0x5D) { // Button 5 - 0xD75D
 53a:	88 81       	ld	r24, Y
 53c:	87 3d       	cpi	r24, 0xD7	; 215
 53e:	09 f4       	brne	.+2      	; 0x542 <main+0xa2>
 540:	89 81       	ldd	r24, Y+1	; 0x01
				song = mary;
			}
		}
		
		if (quarterSecElapsed) {
 542:	80 91 84 22 	lds	r24, 0x2284	; 0x802284 <__data_end>
 546:	88 23       	and	r24, r24
 548:	d1 f2       	breq	.-76     	; 0x4fe <main+0x5e>
			quarterSecElapsed = 0;
 54a:	10 92 84 22 	sts	0x2284, r1	; 0x802284 <__data_end>
			if (!noteDuration) {
 54e:	80 91 86 22 	lds	r24, 0x2286	; 0x802286 <noteDuration>
 552:	81 11       	cpse	r24, r1
 554:	27 c0       	rjmp	.+78     	; 0x5a4 <main+0x104>
				note = song[songVectIndexer++];
 556:	80 91 87 22 	lds	r24, 0x2287	; 0x802287 <songVectIndexer>
 55a:	90 91 88 22 	lds	r25, 0x2288	; 0x802288 <songVectIndexer+0x1>
 55e:	9c 01       	movw	r18, r24
 560:	2f 5f       	subi	r18, 0xFF	; 255
 562:	3f 4f       	sbci	r19, 0xFF	; 255
 564:	20 93 87 22 	sts	0x2287, r18	; 0x802287 <songVectIndexer>
 568:	30 93 88 22 	sts	0x2288, r19	; 0x802288 <songVectIndexer+0x1>
 56c:	fc 01       	movw	r30, r24
 56e:	ef 5f       	subi	r30, 0xFF	; 255
 570:	ff 4d       	sbci	r31, 0xDF	; 223
 572:	80 81       	ld	r24, Z
 574:	80 93 85 22 	sts	0x2285, r24	; 0x802285 <note>
				set_note(note);
 578:	80 91 85 22 	lds	r24, 0x2285	; 0x802285 <note>
 57c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <set_note>
				noteDuration = song[songVectIndexer++] - '0';
 580:	80 91 87 22 	lds	r24, 0x2287	; 0x802287 <songVectIndexer>
 584:	90 91 88 22 	lds	r25, 0x2288	; 0x802288 <songVectIndexer+0x1>
 588:	9c 01       	movw	r18, r24
 58a:	2f 5f       	subi	r18, 0xFF	; 255
 58c:	3f 4f       	sbci	r19, 0xFF	; 255
 58e:	20 93 87 22 	sts	0x2287, r18	; 0x802287 <songVectIndexer>
 592:	30 93 88 22 	sts	0x2288, r19	; 0x802288 <songVectIndexer+0x1>
 596:	fc 01       	movw	r30, r24
 598:	ef 5f       	subi	r30, 0xFF	; 255
 59a:	ff 4d       	sbci	r31, 0xDF	; 223
 59c:	80 81       	ld	r24, Z
 59e:	80 53       	subi	r24, 0x30	; 48
 5a0:	80 93 86 22 	sts	0x2286, r24	; 0x802286 <noteDuration>
			}
			
			noteDuration--;
 5a4:	80 91 86 22 	lds	r24, 0x2286	; 0x802286 <noteDuration>
 5a8:	81 50       	subi	r24, 0x01	; 1
 5aa:	80 93 86 22 	sts	0x2286, r24	; 0x802286 <noteDuration>
 5ae:	a7 cf       	rjmp	.-178    	; 0x4fe <main+0x5e>

000005b0 <__vector_58>:
			break;
		}
	}
}

ISR(USARTE0_RXC_vect) {
 5b0:	1f 92       	push	r1
 5b2:	0f 92       	push	r0
 5b4:	0f b6       	in	r0, 0x3f	; 63
 5b6:	0f 92       	push	r0
 5b8:	11 24       	eor	r1, r1
 5ba:	08 b6       	in	r0, 0x38	; 56
 5bc:	0f 92       	push	r0
 5be:	18 be       	out	0x38, r1	; 56
 5c0:	09 b6       	in	r0, 0x39	; 57
 5c2:	0f 92       	push	r0
 5c4:	19 be       	out	0x39, r1	; 57
 5c6:	0b b6       	in	r0, 0x3b	; 59
 5c8:	0f 92       	push	r0
 5ca:	1b be       	out	0x3b, r1	; 59
 5cc:	2f 93       	push	r18
 5ce:	3f 93       	push	r19
 5d0:	4f 93       	push	r20
 5d2:	5f 93       	push	r21
 5d4:	6f 93       	push	r22
 5d6:	7f 93       	push	r23
 5d8:	8f 93       	push	r24
 5da:	9f 93       	push	r25
 5dc:	af 93       	push	r26
 5de:	bf 93       	push	r27
 5e0:	ef 93       	push	r30
 5e2:	ff 93       	push	r31
	char newChar = USARTE0_in_char();
 5e4:	0e 94 4d 03 	call	0x69a	; 0x69a <USARTE0_in_char>
	if(newChar == 0xD5) {
 5e8:	85 3d       	cpi	r24, 0xD5	; 213
 5ea:	19 f4       	brne	.+6      	; 0x5f2 <__vector_58+0x42>
		nextCode = 0;
 5ec:	10 92 00 20 	sts	0x2000, r1	; 0x802000 <__data_start>
 5f0:	0e c0       	rjmp	.+28     	; 0x60e <__vector_58+0x5e>
	} else if (nextCode < 2) {
 5f2:	90 91 00 20 	lds	r25, 0x2000	; 0x802000 <__data_start>
 5f6:	92 30       	cpi	r25, 0x02	; 2
 5f8:	50 f4       	brcc	.+20     	; 0x60e <__vector_58+0x5e>
		codes[nextCode++] = newChar;
 5fa:	e0 91 00 20 	lds	r30, 0x2000	; 0x802000 <__data_start>
 5fe:	91 e0       	ldi	r25, 0x01	; 1
 600:	9e 0f       	add	r25, r30
 602:	90 93 00 20 	sts	0x2000, r25	; 0x802000 <__data_start>
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	e7 57       	subi	r30, 0x77	; 119
 60a:	fd 4d       	sbci	r31, 0xDD	; 221
 60c:	80 83       	st	Z, r24
	}
}
 60e:	ff 91       	pop	r31
 610:	ef 91       	pop	r30
 612:	bf 91       	pop	r27
 614:	af 91       	pop	r26
 616:	9f 91       	pop	r25
 618:	8f 91       	pop	r24
 61a:	7f 91       	pop	r23
 61c:	6f 91       	pop	r22
 61e:	5f 91       	pop	r21
 620:	4f 91       	pop	r20
 622:	3f 91       	pop	r19
 624:	2f 91       	pop	r18
 626:	0f 90       	pop	r0
 628:	0b be       	out	0x3b, r0	; 59
 62a:	0f 90       	pop	r0
 62c:	09 be       	out	0x39, r0	; 57
 62e:	0f 90       	pop	r0
 630:	08 be       	out	0x38, r0	; 56
 632:	0f 90       	pop	r0
 634:	0f be       	out	0x3f, r0	; 63
 636:	0f 90       	pop	r0
 638:	1f 90       	pop	r1
 63a:	18 95       	reti

0000063c <tcc0_init>:
 63c:	e0 e0       	ldi	r30, 0x00	; 0
 63e:	f8 e0       	ldi	r31, 0x08	; 8
 640:	87 e4       	ldi	r24, 0x47	; 71
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	86 a3       	std	Z+38, r24	; 0x26
 646:	97 a3       	std	Z+39, r25	; 0x27
 648:	80 ec       	ldi	r24, 0xC0	; 192
 64a:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__TEXT_REGION_LENGTH__+0x700180>
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	80 83       	st	Z, r24
 652:	10 a2       	std	Z+32, r1	; 0x20
 654:	11 a2       	std	Z+33, r1	; 0x21
 656:	08 95       	ret

00000658 <tcc1_enable>:
 658:	e0 e4       	ldi	r30, 0x40	; 64
 65a:	f8 e0       	ldi	r31, 0x08	; 8
 65c:	10 a2       	std	Z+32, r1	; 0x20
 65e:	11 a2       	std	Z+33, r1	; 0x21
 660:	87 e0       	ldi	r24, 0x07	; 7
 662:	80 83       	st	Z, r24
 664:	08 95       	ret

00000666 <tcc1_init>:
 666:	e0 e4       	ldi	r30, 0x40	; 64
 668:	f8 e0       	ldi	r31, 0x08	; 8
 66a:	80 e4       	ldi	r24, 0x40	; 64
 66c:	9f e1       	ldi	r25, 0x1F	; 31
 66e:	86 a3       	std	Z+38, r24	; 0x26
 670:	97 a3       	std	Z+39, r25	; 0x27
 672:	81 e0       	ldi	r24, 0x01	; 1
 674:	86 83       	std	Z+6, r24	; 0x06
 676:	10 a2       	std	Z+32, r1	; 0x20
 678:	11 a2       	std	Z+33, r1	; 0x21
 67a:	08 95       	ret

0000067c <USARTE0_init>:
 67c:	24 e0       	ldi	r18, 0x04	; 4
 67e:	20 93 82 06 	sts	0x0682, r18	; 0x800682 <__TEXT_REGION_LENGTH__+0x700682>
 682:	e0 ea       	ldi	r30, 0xA0	; 160
 684:	fa e0       	ldi	r31, 0x0A	; 10
 686:	86 83       	std	Z+6, r24	; 0x06
 688:	62 95       	swap	r22
 68a:	60 7f       	andi	r22, 0xF0	; 240
 68c:	96 2b       	or	r25, r22
 68e:	97 83       	std	Z+7, r25	; 0x07
 690:	83 e0       	ldi	r24, 0x03	; 3
 692:	85 83       	std	Z+5, r24	; 0x05
 694:	88 e1       	ldi	r24, 0x18	; 24
 696:	84 83       	std	Z+4, r24	; 0x04
 698:	08 95       	ret

0000069a <USARTE0_in_char>:
 69a:	e0 ea       	ldi	r30, 0xA0	; 160
 69c:	fa e0       	ldi	r31, 0x0A	; 10
 69e:	81 81       	ldd	r24, Z+1	; 0x01
 6a0:	88 23       	and	r24, r24
 6a2:	ec f7       	brge	.-6      	; 0x69e <USARTE0_in_char+0x4>
 6a4:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
 6a8:	08 95       	ret

000006aa <USARTE0_enable_interrupts>:
 6aa:	98 2f       	mov	r25, r24
 6ac:	9f 7d       	andi	r25, 0xDF	; 223
 6ae:	92 35       	cpi	r25, 0x52	; 82
 6b0:	c9 f4       	brne	.+50     	; 0x6e4 <USARTE0_enable_interrupts+0x3a>
 6b2:	6f 7d       	andi	r22, 0xDF	; 223
 6b4:	6c 34       	cpi	r22, 0x4C	; 76
 6b6:	31 f4       	brne	.+12     	; 0x6c4 <USARTE0_enable_interrupts+0x1a>
 6b8:	e0 ea       	ldi	r30, 0xA0	; 160
 6ba:	fa e0       	ldi	r31, 0x0A	; 10
 6bc:	83 81       	ldd	r24, Z+3	; 0x03
 6be:	80 61       	ori	r24, 0x10	; 16
 6c0:	83 83       	std	Z+3, r24	; 0x03
 6c2:	08 95       	ret
 6c4:	6d 34       	cpi	r22, 0x4D	; 77
 6c6:	31 f4       	brne	.+12     	; 0x6d4 <USARTE0_enable_interrupts+0x2a>
 6c8:	e0 ea       	ldi	r30, 0xA0	; 160
 6ca:	fa e0       	ldi	r31, 0x0A	; 10
 6cc:	83 81       	ldd	r24, Z+3	; 0x03
 6ce:	80 62       	ori	r24, 0x20	; 32
 6d0:	83 83       	std	Z+3, r24	; 0x03
 6d2:	08 95       	ret
 6d4:	68 34       	cpi	r22, 0x48	; 72
 6d6:	01 f5       	brne	.+64     	; 0x718 <USARTE0_enable_interrupts+0x6e>
 6d8:	e0 ea       	ldi	r30, 0xA0	; 160
 6da:	fa e0       	ldi	r31, 0x0A	; 10
 6dc:	83 81       	ldd	r24, Z+3	; 0x03
 6de:	80 63       	ori	r24, 0x30	; 48
 6e0:	83 83       	std	Z+3, r24	; 0x03
 6e2:	08 95       	ret
 6e4:	84 37       	cpi	r24, 0x74	; 116
 6e6:	c1 f4       	brne	.+48     	; 0x718 <USARTE0_enable_interrupts+0x6e>
 6e8:	6f 7d       	andi	r22, 0xDF	; 223
 6ea:	6c 34       	cpi	r22, 0x4C	; 76
 6ec:	31 f4       	brne	.+12     	; 0x6fa <USARTE0_enable_interrupts+0x50>
 6ee:	e0 ea       	ldi	r30, 0xA0	; 160
 6f0:	fa e0       	ldi	r31, 0x0A	; 10
 6f2:	83 81       	ldd	r24, Z+3	; 0x03
 6f4:	81 60       	ori	r24, 0x01	; 1
 6f6:	83 83       	std	Z+3, r24	; 0x03
 6f8:	08 95       	ret
 6fa:	6d 34       	cpi	r22, 0x4D	; 77
 6fc:	31 f4       	brne	.+12     	; 0x70a <USARTE0_enable_interrupts+0x60>
 6fe:	e0 ea       	ldi	r30, 0xA0	; 160
 700:	fa e0       	ldi	r31, 0x0A	; 10
 702:	83 81       	ldd	r24, Z+3	; 0x03
 704:	82 60       	ori	r24, 0x02	; 2
 706:	83 83       	std	Z+3, r24	; 0x03
 708:	08 95       	ret
 70a:	68 34       	cpi	r22, 0x48	; 72
 70c:	29 f4       	brne	.+10     	; 0x718 <USARTE0_enable_interrupts+0x6e>
 70e:	e0 ea       	ldi	r30, 0xA0	; 160
 710:	fa e0       	ldi	r31, 0x0A	; 10
 712:	83 81       	ldd	r24, Z+3	; 0x03
 714:	83 60       	ori	r24, 0x03	; 3
 716:	83 83       	std	Z+3, r24	; 0x03
 718:	08 95       	ret

0000071a <__tablejump2__>:
 71a:	ee 0f       	add	r30, r30
 71c:	ff 1f       	adc	r31, r31
 71e:	88 1f       	adc	r24, r24
 720:	8b bf       	out	0x3b, r24	; 59
 722:	07 90       	elpm	r0, Z+
 724:	f6 91       	elpm	r31, Z
 726:	e0 2d       	mov	r30, r0
 728:	1b be       	out	0x3b, r1	; 59
 72a:	19 94       	eijmp

0000072c <_exit>:
 72c:	f8 94       	cli

0000072e <__stop_program>:
 72e:	ff cf       	rjmp	.-2      	; 0x72e <__stop_program>
